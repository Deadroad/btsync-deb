#!/bin/sh
# postinst script for btsync
#
# see: dh_installdeb(1)

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

set -e

# Source debconf library.
. /usr/share/debconf/confmodule

CONFFILE=/etc/btsync/debconf-default.conf
DESKFILE=/usr/share/applications/btsync.desktop

create_default_instance () {
	db_get btsync/device-name || RET="$(hostname) - Default Instance"
	DEVICE_NAME="${RET:-$(hostname) - Default Instance}"
	db_get btsync/bind-port || RET=0
	LISTENING_PORT=${RET}
	db_get btsync/use-upnp || RET=false
	USE_UPNP=${RET}
	db_get btsync/limit-download || RET=0
	DOWNLOAD_LIMIT=${RET}
	db_get btsync/limit-upload || RET=0
	UPLOAD_LIMIT=${RET}
	db_get btsync/disk_low_priority || RET="true"
	DISK_LOW_PRIORITY=${RET}
	db_get btsync/lan_encrypt_data || RET="true"
	LAN_ENCRYPT_DATA=${RET}
	db_get btsync/lan_use_tcp || RET="false"
	LAN_USE_TCP=${RET}
	db_get btsync/rate_limit_local_peers || RET="false"
	RATE_LIMIT_LOCAL_PEERS=${RET}
	db_get btsync/folder_rescan_interval || RET=600
	FOLDER_RESCAN_INTERVAL=${RET}
	db_get btsync/webgui-bindaddr || RET="0.0.0.0"
	LISTEN_ADDR="${RET}"
	db_get btsync/webgui-bindport || RET="8888"
	LISTEN_PORT="${RET}"
	db_get btsync/webgui-username || RET="admin"
	LOGIN="${RET}"
	db_get btsync/webgui-password || RET="btsyncPassword"
	PASSWORD="${RET}"
	db_get btsync/api_key  || RET=""
	API_KEY="${RET}"
	db_get btsync/daemon_umask || RET=""
	UMASK="${RET}"
	db_get btsync/max_file_size_diff_for_patching || RET=""
	MAX_FILE_DIFF_PATCH="${RET}"
	db_get btsync/max_file_size_for_versioning || RET=""
	MAX_FILE_VERSIONING="${RET}"
	db_get btsync/send_buf_size || RET=""
	SEND_BUF_SIZE="${RET}"
	db_get btsync/recv_buf_size || RET=""
	RECV_BUF_SIZE="${RET}"
	db_get btsync/sync_max_time_diff || RET=""
	MAX_TIME_DIFF="${RET}"
	db_get btsync/sync_trash_ttl || RET=""
	TRASH_TTL="${RET}"
	(
	cat <<EOF
//!/usr/lib/btsync/btsync-daemon --config
//
// Default instance automatically created by debconf
//
// DO NOT EDIT THIS FILE MANUALLY - SERIOUSLY
//
// THIS FILE WILL BE OVERWRITTEN AT EVERY UPDATE
// OR RECONFIGURATION SO DO NOT EVEN TRY IT
//
// USE dpkg-reconfigure btsync INSTEAD TO MODIFY
// THE CONFIGURATION
//
// ${UMASK:+DAEMON_UMASK=${UMASK}}
{
	"device_name": "${DEVICE_NAME}",
	"storage_path" : "/var/lib/btsync",
	"listening_port" : $LISTENING_PORT,
	"check_for_updates" : false,
	"use_upnp" : $USE_UPNP,
	"download_limit" : $DOWNLOAD_LIMIT,
	"upload_limit" : $UPLOAD_LIMIT,
	"disk_low_priority" : ${DISK_LOW_PRIORITY},
	"lan_encrypt_data" : ${LAN_ENCRYPT_DATA},
	"lan_use_tcp" : ${LAN_USE_TCP},
	"rate_limit_local_peers" : ${RATE_LIMIT_LOCAL_PEERS},
	"folder_rescan_interval" : ${FOLDER_RESCAN_INTERVAL},
EOF
	) > ${CONFFILE}
	if [ -n "$MAX_FILE_DIFF_PATCH" ]; then
		echo "	\"max_file_size_diff_for_patching\" : ${MAX_FILE_DIFF_PATCH}," >> ${CONFFILE}
	fi
	if [ -n "$MAX_FILE_VERSIONING" ]; then
		echo "	\"max_file_size_for_versioning\" : ${MAX_FILE_VERSIONING}," >> ${CONFFILE}
	fi
	if [ -n "$SEND_BUF_SIZE" ]; then
		echo "	\"send_buf_size\" : ${SEND_BUF_SIZE}," >> ${CONFFILE}
	fi
	if [ -n "$RECV_BUF_SIZE" ]; then
		echo "	\"recv_buf_size\" : ${RECV_BUF_SIZE}," >> ${CONFFILE}
	fi
	if [ -n "$MAX_TIME_DIFF" ]; then
		echo "	\"sync_max_time_diff\" : ${MAX_TIME_DIFF}," >> ${CONFFILE}
	fi
	if [ -n "$TRASH_TTL" ]; then
		echo "	\"sync_trash_ttl\" : ${TRASH_TTL}," >> ${CONFFILE}
	fi
	(
	cat <<EOF
	"webui" :
	{
EOF
	) >> ${CONFFILE}
	if [ "x$API_KEY" != "x" ]; then
		(
		cat <<EOF
		"api_key" : "${API_KEY}",
EOF
		) >> ${CONFFILE}
	fi
	if [ "x$LOGIN" != "x" ]; then
		(
		cat <<EOF
		"listen" : "${LISTEN_ADDR}:${LISTEN_PORT}",
		"login" : "$LOGIN",
		"password" : "$PASSWORD"
EOF
		) >> ${CONFFILE}
	else
		(
		cat <<EOF
		"listen" : "${LISTEN_ADDR}:${LISTEN_PORT}"
EOF
		) >> ${CONFFILE}
	fi
	(
	cat <<EOF
	}
}
EOF
	) >> ${CONFFILE}


	case "${LISTEN_ADDR}" in
	"0.0.0.0")	WEBADDR="localhost";;
	"127.0.0.1")	WEBADDR="localhost";;
	*)		WEBADDR=${LISTEN_ADDR};;
	esac

        if [ -d /usr/share/applications/ -a ! -e ${DESKFILE} -a ! -L ${DESKFILE} ] ; then
                (
                cat <<EOF
[Desktop Entry]
Name=BitTorrent Sync Management
Comment=BitTorrent Sync default instance management interface
Exec=sensible-browser http://${WEBADDR}:${LISTEN_PORT}
Terminal=false
Type=Application
Icon=btsync
Categories=Network;
EOF
                ) > ${DESKFILE}
        fi

	unset PASSWORD
	unset LOGIN
	unset LISTEN_PORT
	unset LISTEN_ADDR
	unset UPLOAD_LIMIT
	unset DOWNLOAD_LIMIT
	unset USE_UPNP
	unset LISTENING_PORT
	unset MAX_FILE_DIFF_PATCH
	unset MAX_FILE_VERSIONING
	unset SEND_BUF_SIZE
	unset RECV_BUF_SIZE
	unset MAX_TIME_DIFF
	unset TRASH_TTL
	chmod 400 ${CONFFILE}
}

remove_default_instance () {
	rm -f ${CONFFILE}
	rm -f ${DESKFILE}
}

case "$1" in
configure)
	db_get btsync/managed-configuration || RET=false
	if [ "$RET" = "true" ]; then
		create_default_instance
	else
		remove_default_instance
	fi
	;;

abort-upgrade|abort-remove|abort-deconfigure)
	;;

*)
	echo "postinst called with unknown argument \`$1'" >&2
	exit 1
	;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
